{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"readme/","title":"Welcome to the Presto Tutorials Repository!","text":""},{"location":"readme/#introduction","title":"Introduction","text":"<p>This repo contains instructions for different ways to set up Presto and examples for how to connect to different data sources.  We will also have video and written walk-throughs linked as we publish them.</p> <p>Give us a \ud83c\udf1f if you want more of this content!  Be sure to click watch so you know when new tutorials are uploaded.</p>"},{"location":"readme/#how-to-navigate","title":"How to navigate","text":"<p>Up above you'll see directories for different topics, and inside each directory you will find specific breakdowns.  For example, if you want to learn how to setup Presto on Amazon Web Services go to:</p> <p>\u21b3 <code>running on cloud services</code>  \u00a0\u00a0\u00a0\u00a0\u21b3 <code>AWS</code></p>"},{"location":"readme/#suggestions-and-feedback","title":"Suggestions and Feedback","text":"<p>We would love to hear from you, please create an issue for: - Something you would like to see a tutorial for - Something you would like to see an example of - Any feedback on existing materials - Any suggestions for how to make this repo better - If you agree with an issue, comment on it so we know which topics to focus on!</p>"},{"location":"readme/#publication-plan","title":"Publication Plan","text":"<p>Legend [ \u2611\ufe0f = completed | \u270f\ufe0f = drafting ]</p> <ol> <li>\u270f\ufe0f How to connect Presto to AWS Glue </li> <li>\u270f\ufe0f How to run Presto on AWS</li> <li>\u270f\ufe0f How to run Presto locally using Docker</li> <li>How to connect Presto to MongoDB</li> </ol>"},{"location":"docker-compose/","title":"Presto in Docker Compose","text":"<p>This is a sample setup to run a Presto cluster with 1 coordinator and 2 workers.</p>"},{"location":"docker-compose/#requirements","title":"Requirements","text":"<ul> <li>Mac OS X or Linux, with minimum 10G memory and 50G free disk space</li> <li>Docker Desktop 4.10.1 (Engine: 24.0.2, Compose: v2.18.1) and above</li> </ul>"},{"location":"docker-compose/#update-catalog-configurations","title":"Update catalog configurations","text":"<ul> <li>Update <code>mysql.properties</code>, <code>postgresql.properties</code>, <code>hive.properties</code> and/or <code>glue.properties</code> if you need to.</li> <li>Add catalogs of other connectors if you need to.</li> <li>Update <code>volumes</code> sections in <code>docker-compose.yaml</code> to mount catalog files accordingly.</li> <li>Update <code>environment</code> sections in <code>docker-compose.yaml</code> to inject required environment variables into Presto proceses.</li> </ul>"},{"location":"docker-compose/#start-a-presto-cluster","title":"Start a Presto cluster","text":"<p>Open a terminal, and change into this directory.</p> <pre><code>docker compose up\n</code></pre> <p>You can monitor the logs of different containers in the terminal and Docker Desktop UI.</p>"},{"location":"docker-compose/#access-presto-web-console","title":"Access Presto Web Console","text":"<pre><code>http://127.0.0.1:8080\n</code></pre>"},{"location":"docker-compose/#run-presto-cli","title":"Run Presto CLI","text":"<pre><code>docker exec -it cli /opt/presto-cli --server http://10.18.0.8:8080\n</code></pre>"},{"location":"docker-compose/#stop-and-delete-the-cluster","title":"Stop and delete the cluster","text":"<pre><code>ctrl-c \ndocker compose down\n</code></pre>"},{"location":"docker-compose/#notes","title":"Notes","text":"<ul> <li>The cluster perfroms better on Linux because the docker image is built to run on linux/amd64.</li> <li>A container may hang when running on Mac OS X. You can restart it in either terminal or Docker Desktop.</li> </ul>"},{"location":"docker-compose/MongoDB/readme/","title":"Readme","text":""},{"location":"docker-compose/MongoDB/readme/#introduction","title":"Introduction","text":""},{"location":"docker-compose/MongoDB/readme/#in-this-tutorial-you-will","title":"In this tutorial you will:","text":"<ul> <li>Run Presto with mongodb using Docker-compose</li> <li>Connecting Prestodb, mongodb &amp; mysql</li> <li>Creating individual tables in mongodb and prestodb</li> <li>Query data from prestodb to retrieve data from mongodb</li> </ul>"},{"location":"docker-compose/MongoDB/readme/#prerequisites","title":"Prerequisites:","text":"<p>Tested in Docker Version 20.x.x, Docker Compose version 1.29.x</p> <p>In order to complete the setup, please follow the steps below:</p>"},{"location":"docker-compose/MongoDB/readme/#installation-steps","title":"Installation Steps:","text":""},{"location":"docker-compose/MongoDB/readme/#step-1-install-docker-and-docker-compose","title":"Step 1: Install Docker and Docker Compose","text":"<p>Make sure you have Docker and Docker Compose installed on your system. You can download and install them from the official Docker website: https://www.docker.com/get-started</p>"},{"location":"docker-compose/MongoDB/readme/#step-2-create-a-docker-compose-file","title":"Step 2: Create a Docker Compose file","text":"<p>Open a text editor and create a file named <code>docker-compose.yml</code>. Add the following content to the file: <pre><code>---\nversion: '2'\nservices:\n  presto:\n    image: ahanaio/prestodb-sandbox:0.280\n    container_name: presto\n    volumes:\n      - ${PWD}/config/catalog/mongodb.properties:/opt/presto-server/etc/catalog/mongodb.properties\n    depends_on:\n      - mongodb\n    ports:\n      - \"8080:8080\"\n    networks:\n      - presto-nw\n  mongodb:\n    image: mongo:6.0.4\n    container_name: presto-mongo\n    volumes:\n      - mongoData:/data/db\n    ports:\n      - \"27017:27017\"\n    networks:\n     - presto-nw\nnetworks:\n  presto-nw:\n    driver: bridge\nvolumes:\n  mongoData:\n~                     \n---\n</code></pre></p>"},{"location":"docker-compose/MongoDB/readme/#save-the-docker-compose-file","title":"Save the Docker Compose file","text":"<p>-Save the docker-compose.yml file in a directory of your choice.</p>"},{"location":"docker-compose/MongoDB/readme/#step-3-start-the-containers","title":"Step 3: Start the containers","text":"<p>Open a terminal  and navigate to the directory where you saved the Docker Compose file. Run the following command to start the containers: <code>docker-compose up</code></p>"},{"location":"docker-compose/MongoDB/readme/#step-4-connecting-to-mongodb","title":"Step 4: Connecting to MongoDB","text":"<p>Execute the following command in another terminal window. <code>docker exec -it presto-mongo mongosh</code></p>"},{"location":"docker-compose/MongoDB/readme/#sample-queries-to-be-run-on-the-mongodb-container","title":"Sample queries to be run on the mongodb container:","text":"<p>The following commands create a collection called \u201cbook\u201d and insert two records into it. <pre><code>-----------------------------------\nuse presto_to_mongodb;\ndb.createCollection(\"book\")\ndb.book.insertOne({\"id\":1, \"book_name\":\"harry potter\" })\ndb.book.insertOne({\"id\":2, \"book_name\":\"the wicked king\" })\n-----------------------------------\n</code></pre></p>"},{"location":"docker-compose/MongoDB/readme/#step-5-connecting-to-prestodb","title":"Step 5: Connecting to PrestoDB","text":"<p>Execute the following command in another  terminal window.  <code>docker exec -it presto presto-cli</code></p>"},{"location":"docker-compose/MongoDB/readme/#sample-presto-queries-to-query-mongodb-collections","title":"Sample Presto queries to  query mongoDB collections","text":"<p>The following command queries all records from the book collection <pre><code>show catalogs;\n-----------------------------------\nshow schemas in mongodb;\nuse mongodb.presto_to_mongodb;\nselect * from book;\n-----------------------------------\n</code></pre></p> <p>These steps should help you get started with setting up PrestoDB and MongoDB using Docker Compose.</p>"},{"location":"docker-compose-native/readme/","title":"Getting Started with Docker setup with Presto coordinator, Prestissimo worker, Hive, MinIO","text":"<p>This Docker setup has: 1. A Presto coordinator to coordinate Presto or Prestissimo workers 2. A Prestissimo worker to run the queries 1. A MinIO container to provide out of the box local S3 storage.  2. A Hive container to connect MinIO with Presto</p>"},{"location":"docker-compose-native/readme/#currently-supported-platforms","title":"Currently supported platforms","text":"<p>x86 Intel Mac Ubuntu Linux</p> <p>Everything should already be set up to run for this Docker setup. To run this Docker setup, make sure you're in this current directory <code>/docker-compose-native</code> and run <code>docker compose up</code> to bring up the Docker containers and use the setup. </p> <p>It does take some time for the Prestissimo worker to be hooked up with the Presto coordinator. You can check if it's connected or not by going to http://localhost:8080/ui/ and it should show a dashboard with current active workers and other stats.</p> <p>To bring the Docker containers down, run <code>docker compose down</code> or <code>ctrl+c</code> on the current terminal where you ran <code>docker compose up</code>.</p>"},{"location":"docker-compose-native/readme/#docker-setup-via-podman","title":"Docker Setup via Podman","text":"<p>Podman Desktop is similar to Docker Desktop and is open-source and available to use. It works with Windows, macOS(Intel and Arm), and Linux. Please follow the steps accordingly in the link below for your machine's respective OS.</p> <p>https://podman-desktop.io/docs/installation</p> <p>Specific instructions for macOS(Intel or Arm) machine setup is also provided in the /docker-compose-native/docs/podman_readme.md in this repository.</p>"},{"location":"docker-compose-native/readme/#after-installation-notes","title":"After installation notes","text":"<ul> <li>Some queries to try and demo will be provided in /docker-compose-native/docs/demo.md.</li> <li>Go to http://localhost:8080 on your web browser to see the UI interface to keep track of Presto queries that you run using the coordinator container's presto-cli.</li> <li>Go to http://localhost:9000 on your web browser to see the UI interface for your MinIO storage, username and password are both <code>minioadmin</code>.</li> </ul>"},{"location":"docker-compose-native/docs/demo/","title":"Demo","text":"<ol> <li> <p>Go to Podman Desktop, click on the Containers tab on the left side, and click on the coordinator container </p> </li> <li> <p>Click on the Terminal tab and in the Terminal invoke the presto-cli by typing <code>presto-cli</code> and press enter. </p> </li> </ol> <p>You can now play around with the Docker setup with Presto coordinator and Velox workers!</p>"},{"location":"docker-compose-native/docs/demo/#some-queries-to-try","title":"Some queries to try","text":"<p><code>select * from system.runtime.nodes;</code></p> <p><code>show catalogs;</code></p> <p><code>use hive.default;</code></p> <p><code>show schemas;</code></p> <p>For the create table query below, please first create an empty bucket named <code>demo-bucket</code> in your MinIO storage using the UI http://localhost:9000.</p> <p><code>create table demo(id varchar, fname varchar, lname varchar) with (format = 'PARQUET', external_location = 's3a://demo-bucket/');</code></p> <p><code>insert into demo values('1', 'donald', 'duck');</code></p> <p><code>select * from demo;</code></p>"},{"location":"docker-compose-native/docs/podman_readme/","title":"Podman readme","text":"<p>Provided below will only be the steps for macOS(Intel and Arm) which will follow the guide from https://podman-desktop.io/docs/installation/macos-install: 1. Go to https://podman-desktop.io/downloads/macos 2. Download your respective Intel or Arm .dmg file 3. Open the .dmg file in your downloads folder and drag it into Applications 4. Open Podman Desktop from Applications 5. When you open Podman Desktop for the first time, click on the \"View detection checks\" button to scan if all the prerequisites to use Podman Desktop are met. If it says \u274c podman cli was not found in the PATH, then you need to install the Podman CLI/Engine which can be done within the application. 6. Install the Podman CLI/Engine via the Podman Desktop 7. Go to the gear icon at the bottom left side of Podman Desktop and create a new Podman machine and set your resources accordingly, for this Docker setup I would suggest having CPU: 6, Disk Size: 100GB, Memory: 20GB  </p> <ol> <li>On terminal, cd to this repo and into docker-compose-native folder</li> <li> <p>Run <code>podman compose up -d</code>, this should bring up the docker containers on the Podman Machine that you have just created </p> </li> <li> <p>Go to http://localhost:8080 on your web browser to see the UI interface to keep track of Presto queries that you run using the coordinator container's presto-cli.</p> </li> <li>Go to http://localhost:9000 on your web browser to see the UI interface for your MinIO storage, username and password are both <code>minioadmin</code>.</li> </ol>"},{"location":"lab-1/","title":"Exercise Title","text":"<p>Description goes here.</p> <p>This section is comprised of the following steps:</p> <ol> <li>Step 1</li> <li>Step 2</li> </ol>"},{"location":"lab-1/#1-step-1","title":"1. Step 1","text":"<p>Things to do in Step 1</p>"},{"location":"lab-1/#2-step-2","title":"2. Step 2","text":"<p>Things to do in Step 2</p>"},{"location":"pre-work/","title":"Pre-work","text":"<p>This section is broken up into the following steps:</p> <ol> <li>Sign up for IBM Cloud</li> <li>Download or clone the repo</li> </ol>"},{"location":"pre-work/#1-sign-up-for-ibm-cloud","title":"1. Sign up for IBM Cloud","text":"<p>Ensure you have an IBM Cloud ID</p> <p></p>"},{"location":"pre-work/#2-download-or-clone-the-repo","title":"2. Download or clone the repo","text":"<p>Various parts of this workshop will require the attendee to upload files or run scripts that we've stored in the repository. So let's get that done early on, you'll need <code>git</code> on your laptop to clone the repository directly, or access to GitHub.com to download the zip file.</p> <p>To Download, go to the GitHub repo for this workshop and download the archived version of the workshop and extract it on your laptop.</p> <p>Alternately, run the following command:</p> <pre><code>git clone https://github.com/IBM/workshop-template\ncd workshop-template\n</code></pre>"},{"location":"resources/ADMIN/","title":"Admin Guide","text":"<p>This section is comprised of the following steps:</p> <ol> <li>Instructor Step</li> </ol>"},{"location":"resources/ADMIN/#1-instructor-step","title":"1. Instructor Step","text":"<p>Things specific to instructors can go here.</p>"},{"location":"resources/CONTRIBUTORS/","title":"Contributors","text":""},{"location":"resources/CONTRIBUTORS/#remko-de-knikker","title":"Remko de Knikker","text":"<ul> <li>Github: remkohdev</li> <li>Twitter: @remkohdev</li> <li>LinkedIn: remkohdev</li> <li>Medium: @remkohdev</li> </ul>"},{"location":"resources/CONTRIBUTORS/#steve-martinelli","title":"Steve Martinelli","text":"<ul> <li>Github: stevemar</li> <li>Twitter: @stevebot</li> <li>LinkedIn: stevemar</li> </ul>"},{"location":"resources/MKDOCS/","title":"mkdocs examples","text":"<p>This page includes a few neat tricks that you can do with <code>mkdocs</code>. For a complete list of examples visit the mkdocs documentation.</p>"},{"location":"resources/MKDOCS/#code","title":"Code","text":"<pre><code>print(\"hello world!\")\n</code></pre>"},{"location":"resources/MKDOCS/#code-with-line-numbers","title":"Code with line numbers","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"resources/MKDOCS/#code-with-highlights","title":"Code with highlights","text":"<pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"resources/MKDOCS/#code-with-tabs","title":"Code with tabs","text":"Tab Header <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> Another Tab Header <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"resources/MKDOCS/#more-tabs","title":"More tabs","text":"Windows <p>If on windows download the <code>Win32.zip</code> file and install it.</p> MacOS <p>Run <code>brew install foo</code>.</p> Linux <p>Run <code>apt-get install foo</code>.</p>"},{"location":"resources/MKDOCS/#checklists","title":"Checklists","text":"<ul> <li> Lorem ipsum dolor sit amet, consectetur adipiscing elit</li> <li> Vestibulum convallis sit amet nisi a tincidunt</li> <li> In hac habitasse platea dictumst</li> </ul>"},{"location":"resources/MKDOCS/#add-a-button","title":"Add a button","text":"<p>Launch the lab</p> <p>Visit IBM Developer</p> <p>Sign up! </p>"},{"location":"resources/MKDOCS/#call-outs","title":"Call outs","text":"<p>Tip</p> <p>You can use <code>note</code>, <code>abstract</code>, <code>info</code>, <code>tip</code>, <code>success</code>, <code>question</code> <code>warning</code>, <code>failure</code>, <code>danger</code>, <code>bug</code>, <code>quote</code> or <code>example</code>.</p> <p>Note</p> <p>A note.</p> <p>Abstract</p> <p>An abstract.</p> <p>Info</p> <p>Some info.</p> <p>Success</p> <p>A success.</p> <p>Question</p> <p>A question.</p> <p>Warning</p> <p>A warning.</p> <p>Danger</p> <p>A danger.</p> <p>Example</p> <p>A example.</p> <p>Bug</p> <p>A bug.</p>"},{"location":"resources/MKDOCS/#call-outs-with-code","title":"Call outs with code","text":"<p>Note</p> <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa.</p> <pre><code>def bubble_sort(items):\n    for i in range(len(items)):\n        for j in range(len(items) - 1 - i):\n            if items[j] &gt; items[j + 1]:\n                items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre> <p>Nunc eu odio eleifend, blandit leo a, volutpat sapien. Phasellus posuere in sem ut cursus. Nullam sit amet tincidunt ipsum, sit amet elementum turpis. Etiam ipsum quam, mattis in purus vitae, lacinia fermentum enim.</p>"},{"location":"resources/MKDOCS/#formatting","title":"Formatting","text":"<p>In addition to the usual italics, and bold there is now support for:</p> <ul> <li>highlighted</li> <li>underlined</li> <li>strike-through</li> </ul>"},{"location":"resources/MKDOCS/#tables","title":"Tables","text":"OS or Application Username Password Windows VM <code>Administrator</code> <code>foo</code> Linux VM <code>root</code> <code>bar</code>"},{"location":"resources/MKDOCS/#emojis","title":"Emojis","text":"<p>Yes, these work.  </p>"},{"location":"resources/MKDOCS/#images","title":"Images","text":"<p>Nunc eu odio eleifend, blandit leo a, volutpat sapien</p>"},{"location":"resources/MKDOCS/#right-align-image","title":"right align image","text":"<p>Nunc eu odio eleifend, blandit leo a, volutpat sapien</p>"},{"location":"resources/RESOURCES/","title":"Additional resources","text":""},{"location":"resources/RESOURCES/#ibm-demos","title":"IBM Demos","text":"<ul> <li>Collection: InfoSphere Information Server</li> <li>Tutorial: Transforming your data with IBM DataStage</li> </ul>"},{"location":"resources/RESOURCES/#redbooks","title":"Redbooks","text":"<ul> <li>IBM InfoSphere DataStage Data Flow and Job Design</li> <li>InfoSphere DataStage Parallel Framework Standard Practices</li> </ul>"},{"location":"resources/RESOURCES/#videos","title":"Videos","text":"<ul> <li>Video: Postal codes and part numbers (DataStage)</li> <li>Video: Find relationships between sales, employees, and customers (Information Analyzer)</li> <li>Video: Clean and analyze data (Governance Catalog)</li> </ul>"}]}